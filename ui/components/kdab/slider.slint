import { Palette, BorderSpec, Images, LayoutSpec, Typography } from "./styling.slint";
import { SlintText } from "slint-text.slint";

export component Slider {
    in property <int> minimum: 0;
    in property <int> maximum: 100;
    in-out property <int> value;
    in property <bool> always-display-value;

    property <float> range: root.maximum - root.minimum;
    property <float> progress: (root.value - root.minimum) / root.range;
    property <length> value-position: root.progress * root.width; 

    height: 22px;
 
    track := Rectangle {
        width: 100%;
        height: 10px;
        border-radius: self.height / 2;
        border-width: BorderSpec.default-width;
        border-color: Palette.border;
        background: Palette.background;
        opacity: 0.5;
  
        TouchArea {
            pointer_event(event) => {
                if event.button != PointerEventButton.left && event.kind != PointerEventKind.down {
                    return;
                }

                root.set_value((self.mouse_x / self.width * root.range) + root.minimum);
            }
        }
    }
          
    Rectangle {
        x: 0;
        width: root.value-position;
        height: track.height;
        border-radius: track.border-radius;
        border-width: BorderSpec.default-width;
        border-color: Palette.border;
        background: Palette.background;
    }
    
    thumb-touch-area := TouchArea {
        x: root.value-position - self.width / 2;
        width: 22px;
        height: self.width;

        moved => {
            root.set_value(((self.x + self.mouse_x) / root.width * root.range) + root.minimum);
        }     

        thumb := Rectangle {
            width: 100%;
            height: 100%;
            border-radius: self.width / 2;
            border-width: BorderSpec.default-width;
            border-color: Palette.border;
            background: Palette.background;
        }
    } 

    if root.always-display-value || thumb-touch-area.pressed : Rectangle {
        x: thumb-touch-area.x - (self.width - thumb-touch-area.width) / 2;
        y: thumb-touch-area.y - self.height;
        z: 900;
        width: 42px;
        height: 50px;

        Image {
            width: parent.width;
            source: Images.slider-value;
        }


        SlintText {
            y: 6px;
            text: root.value;
            font-size: Typography.small-font-size;
        }
    }

    function set_value(value: int) {
        if root.value == value {
            return;
        }

        root.value = max(root.minimum, min(root.maximum, value));
    }
      
    states [
        pressed when thumb-touch-area.pressed : {
            thumb.background: Palette.selected-background;
        }
    ]
}
