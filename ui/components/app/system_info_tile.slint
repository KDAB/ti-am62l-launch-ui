import { KDButtonRound } from "kd_button_round.slint";
import { SystemResourcesData } from "../../singletons/demo_interface.slint";
import { Slider } from "../kdab/slider.slint";
import { GroupBox } from "std-widgets.slint";
import { SystemInfo } from "system_info.slint";

export component SystemResourcesTile inherits Rectangle {    
    in-out property <length> height-collapsed: 200px;
    in-out property <length> height-expanded: 355px;
    
    out property <bool> is-collapsed: { self.height == height-collapsed };
    out property <bool> is-expanded: { self.height == height-expanded };
    
    public function collapse() { self.height = self.height-collapsed; }
    public function expand() { self.height = self.height-expanded; }

    width: 530px;
    height: self.height-collapsed;

    background := Rectangle {
        property <length> left-margin: 44px;
        property <length> right-margin: 44px;
        property <length> top-margin: 32px;
        property <length> bottom-margin: 56px;

        width: root.width;
        height: root.height;

        Image {
            width: root.width;
            height: root.height;

            source: @image-url("./assets/info_tile.png", nine-slice(80));
        }
    }

    VerticalLayout {
        width: background.width - background.left-margin - background.right-margin;
        height: background.height - background.top-margin - background.bottom-margin;

        x: background.x + background.left-margin;
        y: background.y + background.top-margin;

        header := HorizontalLayout {
            padding: 10px;

            slint-logo := Image {
                width: 56px;
                height: self.width;
                image-fit: ImageFit.contain;
                source: @image-url("./assets/slint-logo-small-light.png");
            }

            title := Text {
                text: "System Resources Usage";
                vertical-alignment: TextVerticalAlignment.center;
            }

            button := KDButtonRound {
                width: 56px;
                height: self.width;

                Rectangle {
                    width: parent.width / 2;
                    height: parent.height / 10;

                    background: white;
                }

                Rectangle {
                    width: parent.height / 10;
                    height: parent.width / 2;

                    background: white;
                    visible: !is-expanded;
                }

                clicked => {
                    is-collapsed ? expand() : collapse();
                }
            }
        }

        contents := Rectangle {
            width: parent.width;

            padding-left: 20px;
            padding-right: 20px;
            
            Text {
                x: parent.padding-left;
                y: 0px;

                text: "CPU usage (total): " + SystemResourcesData.cpu-load-total + "% - RAM usage (total): " + SystemResourcesData.ram-load + "%";
                visible: root.is-collapsed;
            }

            VerticalLayout {
                alignment: space-around;
                padding-left: parent.padding-left;
                padding-right: parent.padding-right;
                visible: root.is-expanded;

                SystemInfo {
                    title: @tr("CPU usage (total): ") + SystemResourcesData.cpu-load-total + "%";
                    percent: SystemResourcesData.cpu-load-total;
                }

                SystemInfo {
                    title: @tr("RAM usage (total): ") + SystemResourcesData.ram-load + "%";
                    percent: SystemResourcesData.ram-load;
                }
            }
        }
    }
}
